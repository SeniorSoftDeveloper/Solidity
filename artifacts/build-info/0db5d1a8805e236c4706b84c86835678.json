{
	"id": "0db5d1a8805e236c4706b84c86835678",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"SendingEther.sol": {
				"content": "// How to send Ether?\r\n// You can send Ether to other contracts by\r\n\r\n// transfer (2300 gas, throws error)\r\n// send (2300 gas, returns bool)\r\n// call (forward all gas or set gas, returns bool)\r\n\r\n// How to receive Ether?\r\n// A contract receiving Ether must have at least one of the functions below\r\n\r\n// receive() external payable\r\n// fallback() external payable\r\n// receive() is called if msg.data is empty, otherwise fallback() is called.\r\n\r\n// Which method should you use?\r\n// call in combination with re-entrancy guard is the recommended method to use after December 2019.\r\n\r\n// Guard against re-entrancy by\r\n// -making all state changes before calling other contracts\r\n// -using re-entrancy guard modifier\r\n\r\n//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\ncontract ReceiveEther{\r\n     /*\r\n    Which function is called, fallback() or receive()?\r\n\r\n           send Ether\r\n               |\r\n         msg.data is empty?\r\n              / \\\r\n            yes  no\r\n            /     \\\r\nreceive() exists?  fallback()\r\n         /   \\\r\n        yes   no\r\n        /      \\\r\n    receive()   fallback()\r\n    */\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"SendingEther.sol": {
				"ReceiveEther": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SendingEther.sol\":773:1115  contract ReceiveEther{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SendingEther.sol\":773:1115  contract ReceiveEther{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220434754a43874a6411eda08afb467ca9b6b3c6bc3c976c3e38991194a5cd61ec864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220434754a43874a6411eda08afb467ca9b6b3c6bc3c976c3e38991194a5cd61ec864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER SELFBALANCE SLOAD LOG4 CODESIZE PUSH21 0xA6411EDA08AFB467CA9B6B3C6BC3C976C3E3899119 0x4A 0x5C 0xD6 0x1E 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "773:342:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220434754a43874a6411eda08afb467ca9b6b3c6bc3c976c3e38991194a5cd61ec864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER SELFBALANCE SLOAD LOG4 CODESIZE PUSH21 0xA6411EDA08AFB467CA9B6B3C6BC3C976C3E3899119 0x4A 0x5C 0xD6 0x1E 0xC8 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "773:342:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 773,
									"end": 1115,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 773,
									"end": 1115,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 773,
									"end": 1115,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 773,
									"end": 1115,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 773,
									"end": 1115,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 773,
									"end": 1115,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 773,
									"end": 1115,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 773,
									"end": 1115,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 773,
									"end": 1115,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 1115,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 773,
									"end": 1115,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 773,
									"end": 1115,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 773,
									"end": 1115,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 773,
									"end": 1115,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 773,
									"end": 1115,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 773,
									"end": 1115,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 773,
									"end": 1115,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 773,
									"end": 1115,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 1115,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 773,
									"end": 1115,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 1115,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220434754a43874a6411eda08afb467ca9b6b3c6bc3c976c3e38991194a5cd61ec864736f6c63430008070033",
									".code": [
										{
											"begin": 773,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 773,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 1115,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 773,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 773,
											"end": 1115,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SendingEther.sol\":\"ReceiveEther\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"SendingEther.sol\":{\"keccak256\":\"0x9003974cca3e14f5d2e88f1819ca0ca7bd3c8f643228be45ca9c3bb071f2c252\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7c7f74ff44b1286a7a11b00c782edfbb26aed104c6b8f099e681bd997ac8131\",\"dweb:/ipfs/QmSNGf7ZEueAcRyPQYnbj5Syxy782ni7KFhwKakfSRKUHh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"SendingEther.sol": {
				"ast": {
					"absolutePath": "SendingEther.sol",
					"exportedSymbols": {
						"ReceiveEther": [
							2
						]
					},
					"id": 3,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "746:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "ReceiveEther",
							"nameLocation": "782:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "773:342:0",
							"usedErrors": []
						}
					],
					"src": "746:371:0"
				},
				"id": 0
			}
		}
	}
}